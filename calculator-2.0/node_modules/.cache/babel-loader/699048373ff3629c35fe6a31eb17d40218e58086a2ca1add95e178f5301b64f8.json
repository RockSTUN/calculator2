{"ast":null,"code":"function NRpoly(fp) {\n  return 0;\n}\n_c = NRpoly;\nfunction NRexp(fp) {\n  f = a * Math.exp(x0);\n  return 0;\n}\n_c2 = NRexp;\nfunction NRlog(fp) {\n  return 0;\n}\n_c3 = NRlog;\nfunction NRpow(fp) {\n  return 0;\n}\n_c4 = NRpow;\nfunction stringToNumber(s) {\n  if (s.match(/\\./g)) {\n    if (s.match(/\\./g).length == 1) {\n      let aux = s.split('.');\n      return parseInt(aux[0].concat(aux[1]) / 10 ** aux[1].length);\n    } else {\n      return 'MORE_DOTS';\n    }\n  } else {\n    if (precision.match(/\\D/)) {\n      return 'CHARACTER';\n    } else {\n      return parseInt(precision);\n    }\n  }\n}\nfunction newtonRaphson(model, fp) {\n  console.log('ANTES: ', fp);\n  fp.min = stringToNumber(fp.min);\n  fp.max = stringToNumber(fp.max);\n  fp.p = fp.p.map(stringToNumber);\n  fp.pace = stringToNumber(fp.pace);\n  console.log('DEPOIS: ', fp);\n  const x0 = (fp.min + fp.max) / 2;\n  switch (model) {\n    case 'POL':\n      return NRpoly(fp.p, x0);\n    case 'EXP':\n      return NRexp(fp.p, x0);\n    case 'POW':\n      return NRpow(fp.p, x0);\n    case 'LOG':\n      return NRlog(fp.p, x0);\n    default:\n      return 'Set the parameters';\n  }\n}\nexport default newtonRaphson;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"NRpoly\");\n$RefreshReg$(_c2, \"NRexp\");\n$RefreshReg$(_c3, \"NRlog\");\n$RefreshReg$(_c4, \"NRpow\");","map":{"version":3,"names":["NRpoly","fp","NRexp","f","a","Math","exp","x0","NRlog","NRpow","stringToNumber","s","match","length","aux","split","parseInt","concat","precision","newtonRaphson","model","console","log","min","max","p","map","pace"],"sources":["/home/rockstu/Documents/Projects/Calculator/calculator-2.0/src/Components/findZero.js"],"sourcesContent":["function NRpoly(fp){\n    return 0\n}\nfunction NRexp(fp){\n    f = a*Math.exp(x0)\n    return 0\n}\nfunction NRlog(fp){\n    return 0\n}\nfunction NRpow(fp){\n    return 0\n}\n\nfunction stringToNumber(s){\n    if (s.match(/\\./g)){\n            if (s.match(/\\./g).length == 1){\n                let aux = s.split('.')\n                return parseInt(aux[0].concat(aux[1])/(10**aux[1].length))\n            }\n            else{\n                return 'MORE_DOTS'\n            }\n        }\n        else{\n            if (precision.match(/\\D/)){\n                return 'CHARACTER'\n            }\n            else{\n                return parseInt(precision)\n            }\n        }\n}\n\n\nfunction newtonRaphson(model, fp){\n    console.log('ANTES: ',fp)\n    fp.min = stringToNumber(fp.min)\n    fp.max = stringToNumber(fp.max)\n    fp.p = fp.p.map(stringToNumber)\n    fp.pace = stringToNumber(fp.pace)\n    console.log('DEPOIS: ',fp)\n    const x0 = (fp.min +fp.max)/2\n    switch(model){\n        case 'POL':\n            return NRpoly(fp.p,x0)\n        case 'EXP':\n            return NRexp(fp.p,x0)\n        case 'POW':\n            return NRpow(fp.p,x0)\n        case 'LOG':\n            return NRlog(fp.p,x0)\n        default:\n            return 'Set the parameters'\n    }\n}\n\nexport default newtonRaphson;\n"],"mappings":"AAAA,SAASA,MAAM,CAACC,EAAE,EAAC;EACf,OAAO,CAAC;AACZ;AAAC,KAFQD,MAAM;AAGf,SAASE,KAAK,CAACD,EAAE,EAAC;EACdE,CAAC,GAAGC,CAAC,GAACC,IAAI,CAACC,GAAG,CAACC,EAAE,CAAC;EAClB,OAAO,CAAC;AACZ;AAAC,MAHQL,KAAK;AAId,SAASM,KAAK,CAACP,EAAE,EAAC;EACd,OAAO,CAAC;AACZ;AAAC,MAFQO,KAAK;AAGd,SAASC,KAAK,CAACR,EAAE,EAAC;EACd,OAAO,CAAC;AACZ;AAAC,MAFQQ,KAAK;AAId,SAASC,cAAc,CAACC,CAAC,EAAC;EACtB,IAAIA,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,EAAC;IACX,IAAID,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,IAAI,CAAC,EAAC;MAC3B,IAAIC,GAAG,GAAGH,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;MACtB,OAAOC,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,CAACG,MAAM,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC,GAAE,EAAE,IAAEA,GAAG,CAAC,CAAC,CAAC,CAACD,MAAO,CAAC;IAC9D,CAAC,MACG;MACA,OAAO,WAAW;IACtB;EACJ,CAAC,MACG;IACA,IAAIK,SAAS,CAACN,KAAK,CAAC,IAAI,CAAC,EAAC;MACtB,OAAO,WAAW;IACtB,CAAC,MACG;MACA,OAAOI,QAAQ,CAACE,SAAS,CAAC;IAC9B;EACJ;AACR;AAGA,SAASC,aAAa,CAACC,KAAK,EAAEnB,EAAE,EAAC;EAC7BoB,OAAO,CAACC,GAAG,CAAC,SAAS,EAACrB,EAAE,CAAC;EACzBA,EAAE,CAACsB,GAAG,GAAGb,cAAc,CAACT,EAAE,CAACsB,GAAG,CAAC;EAC/BtB,EAAE,CAACuB,GAAG,GAAGd,cAAc,CAACT,EAAE,CAACuB,GAAG,CAAC;EAC/BvB,EAAE,CAACwB,CAAC,GAAGxB,EAAE,CAACwB,CAAC,CAACC,GAAG,CAAChB,cAAc,CAAC;EAC/BT,EAAE,CAAC0B,IAAI,GAAGjB,cAAc,CAACT,EAAE,CAAC0B,IAAI,CAAC;EACjCN,OAAO,CAACC,GAAG,CAAC,UAAU,EAACrB,EAAE,CAAC;EAC1B,MAAMM,EAAE,GAAG,CAACN,EAAE,CAACsB,GAAG,GAAEtB,EAAE,CAACuB,GAAG,IAAE,CAAC;EAC7B,QAAOJ,KAAK;IACR,KAAK,KAAK;MACN,OAAOpB,MAAM,CAACC,EAAE,CAACwB,CAAC,EAAClB,EAAE,CAAC;IAC1B,KAAK,KAAK;MACN,OAAOL,KAAK,CAACD,EAAE,CAACwB,CAAC,EAAClB,EAAE,CAAC;IACzB,KAAK,KAAK;MACN,OAAOE,KAAK,CAACR,EAAE,CAACwB,CAAC,EAAClB,EAAE,CAAC;IACzB,KAAK,KAAK;MACN,OAAOC,KAAK,CAACP,EAAE,CAACwB,CAAC,EAAClB,EAAE,CAAC;IACzB;MACI,OAAO,oBAAoB;EAAA;AAEvC;AAEA,eAAeY,aAAa;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}