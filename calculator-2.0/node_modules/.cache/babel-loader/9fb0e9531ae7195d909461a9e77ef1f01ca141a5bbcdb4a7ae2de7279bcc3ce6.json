{"ast":null,"code":"function NRpoly(params, x0, erro) {\n  return 0;\n}\n_c = NRpoly;\nfunction NRexp(params, x0, erro) {\n  const [a, b, c] = params;\n  console.log(a, b, c);\n  return 0;\n}\n_c2 = NRexp;\nfunction NRlog(params, x0, erro) {\n  return 0;\n}\n_c3 = NRlog;\nfunction NRpow(params, x0, erro) {\n  return 0;\n}\n_c4 = NRpow;\nfunction stringToNumber(s) {\n  if (s.match(/\\./g)) {\n    if (s.match(/\\./g).length == 1) {\n      let aux = s.split('.');\n      return parseInt(aux[0].concat(aux[1]) / 10 ** aux[1].length);\n    } else {\n      return 'MORE_DOTS';\n    }\n  } else {\n    if (s.match(/\\D/)) {\n      return 'CHARACTER';\n    } else {\n      return parseInt(s);\n    }\n  }\n}\nfunction newtonRaphson(model, fp) {\n  let precision = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0.01;\n  console.log('ANTES: ', fp);\n  fp.min = stringToNumber(fp.min);\n  fp.max = stringToNumber(fp.max);\n  fp.p = fp.p.map(stringToNumber);\n  console.log('DEPOIS: ', fp);\n  const x0 = (fp.min + fp.max) / 2;\n  switch (model) {\n    case 'POL':\n      return NRpoly(fp.p, x0, precision);\n    case 'EXP':\n      return NRexp(fp.p, x0, precision);\n    case 'POW':\n      return NRpow(fp.p, x0, precision);\n    case 'LOG':\n      return NRlog(fp.p, x0, precision);\n    default:\n      return 'Set the parameters';\n  }\n}\nexport default newtonRaphson;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"NRpoly\");\n$RefreshReg$(_c2, \"NRexp\");\n$RefreshReg$(_c3, \"NRlog\");\n$RefreshReg$(_c4, \"NRpow\");","map":{"version":3,"names":["NRpoly","params","x0","erro","NRexp","a","b","c","console","log","NRlog","NRpow","stringToNumber","s","match","length","aux","split","parseInt","concat","newtonRaphson","model","fp","precision","min","max","p","map"],"sources":["/home/rockstu/Documents/Projects/Calculator/calculator-2.0/src/Components/findZero.js"],"sourcesContent":["function NRpoly(params, x0, erro){\n    return 0\n}\nfunction NRexp(params, x0, erro){\n    const [a,b,c] = params\n    console.log(a,b,c)\n    return 0\n}\nfunction NRlog(params, x0,erro){\n    return 0\n}\nfunction NRpow(params, x0,erro){\n    return 0\n}\n\nfunction stringToNumber(s){\n    if (s.match(/\\./g)){\n            if (s.match(/\\./g).length == 1){\n                let aux = s.split('.')\n                return parseInt(aux[0].concat(aux[1])/(10**aux[1].length))\n            }\n            else{\n                return 'MORE_DOTS'\n            }\n        }\n        else{\n            if (s.match(/\\D/)){\n                return 'CHARACTER'\n            }\n            else{\n                return parseInt(s)\n            }\n        }\n}\n\n\nfunction newtonRaphson(model, fp, precision = 0.01){\n    console.log('ANTES: ',fp)\n    fp.min = stringToNumber(fp.min)\n    fp.max = stringToNumber(fp.max)\n    fp.p = fp.p.map(stringToNumber)\n    console.log('DEPOIS: ',fp)\n    const x0 = (fp.min +fp.max)/2\n    switch(model){\n        case 'POL':\n            return NRpoly(fp.p,x0,precision)\n        case 'EXP':\n            return NRexp(fp.p,x0,precision)\n        case 'POW':\n            return NRpow(fp.p,x0,precision)\n        case 'LOG':\n            return NRlog(fp.p,x0,precision)\n        default:\n            return 'Set the parameters'\n    }\n}\n\nexport default newtonRaphson;\n"],"mappings":"AAAA,SAASA,MAAM,CAACC,MAAM,EAAEC,EAAE,EAAEC,IAAI,EAAC;EAC7B,OAAO,CAAC;AACZ;AAAC,KAFQH,MAAM;AAGf,SAASI,KAAK,CAACH,MAAM,EAAEC,EAAE,EAAEC,IAAI,EAAC;EAC5B,MAAM,CAACE,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,GAAGN,MAAM;EACtBO,OAAO,CAACC,GAAG,CAACJ,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC;EAClB,OAAO,CAAC;AACZ;AAAC,MAJQH,KAAK;AAKd,SAASM,KAAK,CAACT,MAAM,EAAEC,EAAE,EAACC,IAAI,EAAC;EAC3B,OAAO,CAAC;AACZ;AAAC,MAFQO,KAAK;AAGd,SAASC,KAAK,CAACV,MAAM,EAAEC,EAAE,EAACC,IAAI,EAAC;EAC3B,OAAO,CAAC;AACZ;AAAC,MAFQQ,KAAK;AAId,SAASC,cAAc,CAACC,CAAC,EAAC;EACtB,IAAIA,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,EAAC;IACX,IAAID,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,IAAI,CAAC,EAAC;MAC3B,IAAIC,GAAG,GAAGH,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;MACtB,OAAOC,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,CAACG,MAAM,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC,GAAE,EAAE,IAAEA,GAAG,CAAC,CAAC,CAAC,CAACD,MAAO,CAAC;IAC9D,CAAC,MACG;MACA,OAAO,WAAW;IACtB;EACJ,CAAC,MACG;IACA,IAAIF,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,EAAC;MACd,OAAO,WAAW;IACtB,CAAC,MACG;MACA,OAAOI,QAAQ,CAACL,CAAC,CAAC;IACtB;EACJ;AACR;AAGA,SAASO,aAAa,CAACC,KAAK,EAAEC,EAAE,EAAmB;EAAA,IAAjBC,SAAS,uEAAG,IAAI;EAC9Cf,OAAO,CAACC,GAAG,CAAC,SAAS,EAACa,EAAE,CAAC;EACzBA,EAAE,CAACE,GAAG,GAAGZ,cAAc,CAACU,EAAE,CAACE,GAAG,CAAC;EAC/BF,EAAE,CAACG,GAAG,GAAGb,cAAc,CAACU,EAAE,CAACG,GAAG,CAAC;EAC/BH,EAAE,CAACI,CAAC,GAAGJ,EAAE,CAACI,CAAC,CAACC,GAAG,CAACf,cAAc,CAAC;EAC/BJ,OAAO,CAACC,GAAG,CAAC,UAAU,EAACa,EAAE,CAAC;EAC1B,MAAMpB,EAAE,GAAG,CAACoB,EAAE,CAACE,GAAG,GAAEF,EAAE,CAACG,GAAG,IAAE,CAAC;EAC7B,QAAOJ,KAAK;IACR,KAAK,KAAK;MACN,OAAOrB,MAAM,CAACsB,EAAE,CAACI,CAAC,EAACxB,EAAE,EAACqB,SAAS,CAAC;IACpC,KAAK,KAAK;MACN,OAAOnB,KAAK,CAACkB,EAAE,CAACI,CAAC,EAACxB,EAAE,EAACqB,SAAS,CAAC;IACnC,KAAK,KAAK;MACN,OAAOZ,KAAK,CAACW,EAAE,CAACI,CAAC,EAACxB,EAAE,EAACqB,SAAS,CAAC;IACnC,KAAK,KAAK;MACN,OAAOb,KAAK,CAACY,EAAE,CAACI,CAAC,EAACxB,EAAE,EAACqB,SAAS,CAAC;IACnC;MACI,OAAO,oBAAoB;EAAA;AAEvC;AAEA,eAAeH,aAAa;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}