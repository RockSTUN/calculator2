{"ast":null,"code":"function NRpoly(params, x0) {\n  return 0;\n}\n_c = NRpoly;\nfunction NRexp(params, x0) {\n  return 0;\n}\n_c2 = NRexp;\nfunction NRlog(params, x0) {\n  return 0;\n}\n_c3 = NRlog;\nfunction NRpow(params, x0) {\n  return 0;\n}\n_c4 = NRpow;\nfunction stringToNumber(s) {\n  if (s.match(/\\./g)) {\n    if (s.match(/\\./g).length == 1) {\n      let aux = s.split('.');\n      return parseInt(aux[0].concat(aux[1]) / 10 ** aux[1].length);\n    } else {\n      return 'MORE_DOTS';\n    }\n  } else {\n    if (s.match(/\\D/)) {\n      return 'CHARACTER';\n    } else {\n      return parseInt(s);\n    }\n  }\n}\nfunction newtonRaphson(model, fp) {\n  console.log('ANTES: ', fp);\n  fp.min = stringToNumber(fp.min);\n  fp.max = stringToNumber(fp.max);\n  fp.p = fp.p.map(stringToNumber);\n  console.log('DEPOIS: ', fp);\n  const x0 = (fp.min + fp.max) / 2;\n  switch (model) {\n    case 'POL':\n      return NRpoly(fp.p, x0);\n    case 'EXP':\n      return NRexp(fp.p, x0);\n    case 'POW':\n      return NRpow(fp.p, x0);\n    case 'LOG':\n      return NRlog(fp.p, x0);\n    default:\n      return 'Set the parameters';\n  }\n}\nexport default newtonRaphson;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"NRpoly\");\n$RefreshReg$(_c2, \"NRexp\");\n$RefreshReg$(_c3, \"NRlog\");\n$RefreshReg$(_c4, \"NRpow\");","map":{"version":3,"names":["NRpoly","params","x0","NRexp","NRlog","NRpow","stringToNumber","s","match","length","aux","split","parseInt","concat","newtonRaphson","model","fp","console","log","min","max","p","map"],"sources":["/home/rockstu/Documents/Projects/Calculator/calculator-2.0/src/Components/findZero.js"],"sourcesContent":["function NRpoly(params, x0){\n    return 0\n}\nfunction NRexp(params, x0){\n    return 0\n}\nfunction NRlog(params, x0){\n    return 0\n}\nfunction NRpow(params, x0){\n    return 0\n}\n\nfunction stringToNumber(s){\n    if (s.match(/\\./g)){\n            if (s.match(/\\./g).length == 1){\n                let aux = s.split('.')\n                return parseInt(aux[0].concat(aux[1])/(10**aux[1].length))\n            }\n            else{\n                return 'MORE_DOTS'\n            }\n        }\n        else{\n            if (s.match(/\\D/)){\n                return 'CHARACTER'\n            }\n            else{\n                return parseInt(s)\n            }\n        }\n}\n\n\nfunction newtonRaphson(model, fp){\n    console.log('ANTES: ',fp)\n    fp.min = stringToNumber(fp.min)\n    fp.max = stringToNumber(fp.max)\n    fp.p = fp.p.map(stringToNumber)\n    console.log('DEPOIS: ',fp)\n    const x0 = (fp.min +fp.max)/2\n    switch(model){\n        case 'POL':\n            return NRpoly(fp.p,x0)\n        case 'EXP':\n            return NRexp(fp.p,x0)\n        case 'POW':\n            return NRpow(fp.p,x0)\n        case 'LOG':\n            return NRlog(fp.p,x0)\n        default:\n            return 'Set the parameters'\n    }\n}\n\nexport default newtonRaphson;\n"],"mappings":"AAAA,SAASA,MAAM,CAACC,MAAM,EAAEC,EAAE,EAAC;EACvB,OAAO,CAAC;AACZ;AAAC,KAFQF,MAAM;AAGf,SAASG,KAAK,CAACF,MAAM,EAAEC,EAAE,EAAC;EACtB,OAAO,CAAC;AACZ;AAAC,MAFQC,KAAK;AAGd,SAASC,KAAK,CAACH,MAAM,EAAEC,EAAE,EAAC;EACtB,OAAO,CAAC;AACZ;AAAC,MAFQE,KAAK;AAGd,SAASC,KAAK,CAACJ,MAAM,EAAEC,EAAE,EAAC;EACtB,OAAO,CAAC;AACZ;AAAC,MAFQG,KAAK;AAId,SAASC,cAAc,CAACC,CAAC,EAAC;EACtB,IAAIA,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,EAAC;IACX,IAAID,CAAC,CAACC,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,IAAI,CAAC,EAAC;MAC3B,IAAIC,GAAG,GAAGH,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;MACtB,OAAOC,QAAQ,CAACF,GAAG,CAAC,CAAC,CAAC,CAACG,MAAM,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC,GAAE,EAAE,IAAEA,GAAG,CAAC,CAAC,CAAC,CAACD,MAAO,CAAC;IAC9D,CAAC,MACG;MACA,OAAO,WAAW;IACtB;EACJ,CAAC,MACG;IACA,IAAIF,CAAC,CAACC,KAAK,CAAC,IAAI,CAAC,EAAC;MACd,OAAO,WAAW;IACtB,CAAC,MACG;MACA,OAAOI,QAAQ,CAACL,CAAC,CAAC;IACtB;EACJ;AACR;AAGA,SAASO,aAAa,CAACC,KAAK,EAAEC,EAAE,EAAC;EAC7BC,OAAO,CAACC,GAAG,CAAC,SAAS,EAACF,EAAE,CAAC;EACzBA,EAAE,CAACG,GAAG,GAAGb,cAAc,CAACU,EAAE,CAACG,GAAG,CAAC;EAC/BH,EAAE,CAACI,GAAG,GAAGd,cAAc,CAACU,EAAE,CAACI,GAAG,CAAC;EAC/BJ,EAAE,CAACK,CAAC,GAAGL,EAAE,CAACK,CAAC,CAACC,GAAG,CAAChB,cAAc,CAAC;EAC/BW,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,EAAE,CAAC;EAC1B,MAAMd,EAAE,GAAG,CAACc,EAAE,CAACG,GAAG,GAAEH,EAAE,CAACI,GAAG,IAAE,CAAC;EAC7B,QAAOL,KAAK;IACR,KAAK,KAAK;MACN,OAAOf,MAAM,CAACgB,EAAE,CAACK,CAAC,EAACnB,EAAE,CAAC;IAC1B,KAAK,KAAK;MACN,OAAOC,KAAK,CAACa,EAAE,CAACK,CAAC,EAACnB,EAAE,CAAC;IACzB,KAAK,KAAK;MACN,OAAOG,KAAK,CAACW,EAAE,CAACK,CAAC,EAACnB,EAAE,CAAC;IACzB,KAAK,KAAK;MACN,OAAOE,KAAK,CAACY,EAAE,CAACK,CAAC,EAACnB,EAAE,CAAC;IACzB;MACI,OAAO,oBAAoB;EAAA;AAEvC;AAEA,eAAeY,aAAa;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}